# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-31 21:43
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
                ('state', models.CharField(blank=True, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], max_length=2, null=True)),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('graduationDate', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AcademicAdvisor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aa_first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('aa_last_name', models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CareerAdvisor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ca_first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('ca_last_name', models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
                ('state', models.CharField(choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyFullTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Company')),
            ],
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('give_back', models.CharField(blank=True, choices=[('Money', 'Money (donations to department, scholarship funds, etc.)'), ('Time', 'Time (mentorship, guest lectures, etc.)'), ('Both', 'Both'), ('No', "I don't plan on giving back")], max_length=5, null=True)),
                ('my_choice', models.CharField(blank=True, choices=[('Y', 'Yes'), ('N', 'No')], max_length=1, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExitSurvey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program_introduction', models.CharField(blank=True, choices=[('1', 'Student in the program'), ('2', 'Family member'), ('3', 'Alumni'), ('4', 'School counselor'), ('5', 'Online'), ('6', 'Advertisement'), ('7', 'Information Session'), ('8', 'IS 201'), ('9', 'Other')], max_length=30, null=True)),
                ('mism_decision', models.CharField(blank=True, max_length=130, null=True)),
                ('again', models.CharField(blank=True, choices=[('Y', 'Yes'), ('N', 'No'), ('NS', 'Not Sure')], max_length=2, null=True)),
                ('again_response', models.CharField(blank=True, max_length=150, null=True)),
                ('additional_classes', models.CharField(blank=True, max_length=150, null=True)),
                ('valuable_class', models.CharField(blank=True, choices=[('415', 'IS 415 (Capstone)'), ('531', 'IS 531 (Enterprise Infrastructure)'), ('550/552', 'IS 550/552 (Capstone)'), ('551', 'IS 551 (Leading Change)'), ('555', 'IS 555 (BI)'), ('560', 'IS 560 (Security)'), ('562', 'IS 562 (Project Management)'), ('Other', 'Other')], max_length=30, null=True)),
                ('valuable_class_response', models.CharField(blank=True, max_length=150, null=True)),
                ('least_valuable_class', models.CharField(blank=True, choices=[('415', 'IS 415 (Capstone)'), ('531', 'IS 531 (Enterprise Infrastructure)'), ('550/552', 'IS 550/552 (Capstone)'), ('551', 'IS 551 (Leading Change)'), ('555', 'IS 555 (BI)'), ('560', 'IS 560 (Security)'), ('562', 'IS 562 (Project Management)'), ('Other', 'Other')], max_length=30, null=True)),
                ('least_valuable_class_response', models.CharField(blank=True, max_length=150, null=True)),
                ('best_response', models.CharField(blank=True, max_length=150, null=True)),
                ('recommendation', models.CharField(blank=True, max_length=150, null=True)),
                ('response_date', models.DateTimeField(auto_now_add=True)),
                ('additional_comments', models.CharField(blank=True, max_length=150, null=True)),
                ('aa_appointment', models.IntegerField(blank=True, null=True)),
                ('aa_help_rating', models.IntegerField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], null=True)),
                ('aa_suggestions', models.CharField(blank=True, max_length=150, null=True)),
                ('ca_appointment', models.IntegerField(blank=True, null=True)),
                ('ca_help_rating', models.IntegerField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], null=True)),
                ('ca_suggestions', models.CharField(blank=True, max_length=150, null=True)),
                ('academic_advisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.AcademicAdvisor')),
                ('career_advisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CareerAdvisor')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FullTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_accepted', models.DateField(blank=True, null=True)),
                ('expected_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('position_title', models.CharField(blank=True, max_length=30, null=True)),
                ('contact', models.CharField(blank=True, choices=[('Y', 'Yes'), ('N', 'No'), ('M', 'Maybe')], max_length=1, null=True)),
                ('ft_hours_looking', models.IntegerField(blank=True, choices=[('0-10', '0 - 10 Hours'), ('10-20', '10 - 20 Hours'), ('20-30', '20 - 30 Hours'), ('40-60', '40 - 60 Hours'), ('60+', '60+ Hours')], null=True)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('position_description', models.CharField(blank=True, max_length=30, null=True)),
                ('current_job', models.BooleanField(default=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('avg_hours_week', models.IntegerField(blank=True, null=True)),
                ('satisfaction', models.CharField(blank=True, choices=[('VS', 'Very Satisfied'), ('S', 'Satisfied'), ('OK', 'Ok'), ('D', 'Disatisfied'), ('VD', 'Very Disatisfied')], max_length=50, null=True)),
                ('projected_raise_time_months', models.IntegerField(blank=True, null=True)),
                ('family_friendly', models.BooleanField(default=False)),
                ('family_friendly_response', models.CharField(blank=True, max_length=200, null=True)),
                ('pros', models.CharField(blank=True, max_length=200, null=True)),
                ('cons', models.CharField(blank=True, max_length=200, null=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Internship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('how_obtained', models.CharField(blank=True, max_length=40, null=True)),
                ('hours_looking', models.IntegerField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program_name', models.CharField(blank=True, choices=[('MISM', 'Masters of Information Systems Management'), ('BSIS', 'Bachelors of Information Systems')], max_length=4, null=True)),
                ('academic_advisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.AcademicAdvisor')),
                ('career_advisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CareerAdvisor')),
            ],
        ),
        migrations.CreateModel(
            name='ReocurringSurvey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valuable_program_info', models.CharField(blank=True, max_length=150, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(choices=[('AD', 'Algorithm Design'), ('BPC', 'Business Processes and Controls'), ('CFS', 'Computing Foundational Skills'), ('DA', 'Database Analysis'), ('DS', 'Database Systems'), ('EI', 'Enterprise Infrastructure'), ('ERP', 'ERP Systems'), ('GA', 'Graphics and Animation'), ('HD', 'Hardware Design'), ('IP', 'Image Processing'), ('IS', 'Information Security'), ('MO', 'Microsoft Office'), ('NM', 'Numerical Method'), ('P', 'Platforms'), ('PDP', 'Product Design and Production'), ('PLE', 'Programming Languages/Environments'), ('PP', 'Programming Paradigms'), ('PS', 'Psychology of Security'), ('SD', 'Software Design'), ('SDM', 'Software Development Methodologies'), ('SDT', 'Software Development Tools'), ('ST', 'Software Testing'), ('S', 'Statistics'), ('SN', 'System Networks'), ('T', 'Theory'), ('WB', 'Web Design')], max_length=50)),
                ('full_time', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.FullTime')),
            ],
        ),
        migrations.AddField(
            model_name='companyfulltime',
            name='full_time',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.FullTime'),
        ),
    ]
